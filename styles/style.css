@font-face {
    font-family: 'Roboto';
    font-style: italic;
    font-weight: 500;
    src: url('../fonts/roboto-v30-latin-500.eot'); /* IE9 Compat Modes */
    src: local(''),
         url('../fonts/roboto-v30-latin-500.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
         url('../fonts/roboto-v30-latin-500.woff2') format('woff2'), /* Super Modern Browsers */
         url('../fonts/roboto-v30-latin-500.woff') format('woff'), /* Modern Browsers */
         url('../fonts/roboto-v30-latin-500.ttf') format('truetype'), /* Safari, Android, iOS */
         url('../fonts/roboto-v30-latin-500.svg#Roboto') format('svg'); /* Legacy iOS */
  }

  * {
    font-family: 'Roboto'; 
  }

.maps > * {
    -webkit-user-select: none; /* Safari */
    -ms-user-select: none; /* IE 10 and IE 11 */
    user-select: none; /* Standard syntax */
}

.maps {
    z-index: -1;
    position: absolute;
    width: 100%;
    height: 100%;
}

.maps:active {
    cursor: grabbing;
    
}

body {
    background-color: #eeeeee;
    overflow: hidden; 
    margin: 0px;
  }


  .stages {
    position: fixed;
    width: 50px;
    bottom: 5%;
    right: 2%;
    border-radius:  10px;
    background-color: white;
    box-shadow: 0px 0px 3px black;
    overflow: hidden;
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    transition: all 0.3s cubic-bezier(.25,.8,.25,1);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    border: 3px;
  }

  .stages:hover {
    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
  }



  .fbutton {
    width: 100%;
    height: 30px;
    background-color: white;
    color: black;
    text-align: center;
    position: relative;
    line-height: 30px;
    -webkit-user-select: none; /* Safari */
    -ms-user-select: none; /* IE 10 and IE 11 */
    user-select: none; /* Standard syntax */
    transition: all 0.17s ease-in;
  }

  .fbutton:hover:not(.active-fbutton) {
    cursor: pointer;
  }

  .fbutton:hover:not(.active-fbutton)  {
    background-color: #eeeeee;
  }

  .active-fbutton {
    background-color: #9575CD;
    color: white;
  }


 .svg-icon {

    width: 100%; height: 70%;
    vertical-align: middle;
    fill: currentColor;
    overflow: hidden;
 }




 .route-window {
    z-index: 2;
    position: fixed;
    height: min-content;
    width: 500px;
    top: 2%;
    padding: 20px;
    margin-left: 1%;
    border-radius:  10px;
    background-color: white;
    box-shadow: 0px 0px 3px black;
    overflow: hidden;
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    transition: all 0.3s cubic-bezier(.25,.8,.25,1);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    border: 3px;
    display: flex;
    flex-flow: column;
    
  }

  .route-window:hover {
    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
  }


  .input-container {
    position: relative;
  }
  
  input {
    height: 48px;
    width: 100%;
    border-radius: 4px;
    box-sizing: border-box;
    padding: 16px;
    border: 1px solid #c0c0c0;
  }
  
  .label {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 16px;
    display: flex;
    align-items: center;
    pointer-events: none;
  }
  
  input, .label .text {
    font-size: 16px;
  }
  
  .label .text {
    transition: all 0.15s ease-out;
    color: grey;
  }
  
  input:focus {
    outline: none;
    border: 2px solid #9575CD;
  }
  
  input:focus + .label .text, :not(input[value=""]) + .label .text {
    font-size: 12px;
    transform: translate(0, -150%);
    background-color: white;
    padding-left: 4px;
    padding-right: 4px;
  }
  
  input:focus + .label .text {
    color: #9575CD;
  }


  .materialbutton {
    position: relative;
    
    display: block;

    padding: 0;
  
    overflow: hidden;
  
    border-width: 0;
    outline: none;
    border-radius: 2px;
    box-shadow: 0 1px 4px rgba(0, 0, 0, .6);
    
    background-color: #9575CD;
    color: #ecf0f1;
    
    transition: background-color .3s;
  }
  
  .materialbutton:hover, .materialbutton:focus {
    background-color: #C7A4FF;
  }
  overflow:visible
  .materialbutton > * {
    position: relative;
  }
  
  .materialbutton span {
    display: block;
    padding: 12px 24px;
    font-size: 14px;
  }
  
  .materialbutton:before {
    content: "";
    
    position: absolute;
    top: 50%;
    left: 50%;
    
    display: block;
    width: 0;
    padding-top: 0;
      
    border-radius: 100%;
    
    background-color: rgba(236, 240, 241, .3);
    
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
  
  .materialbutton:active:before {
    width: 120%;
    padding-top: 120%;
    
    transition: width .2s ease-out, padding-top .2s ease-out;
  }
  
 
.autocomplete {
  position: relative;
  display: inline-block;
}

.autocomplete-items {
  /*position: absolute;*/
  overflow:auto;
  z-index: 99;
  /*top: 100%;
  left: 0;
  right: 0;
  max-height: 300%;*/
  height: 350px;
  border-bottom: none;
  border-top: none;
  border: 1px solid #d4d4d4;
}

.autocomplete-items::-webkit-scrollbar {
    display: none;
  }
  

  .autocomplete-items {
    -ms-overflow-style: none;  
    scrollbar-width: none;  
  }
.autocomplete-items div {
  padding: 10px;
  cursor: pointer;
  background-color: #fff;
  border-bottom: 1px solid #d4d4d4;
}
.autocomplete-items div:hover {
  /*when hovering an item:*/
  background-color: #e9e9e9;
}
.autocomplete-active {
  /*when navigating through the items using the arrow keys:*/
  background-color: DodgerBlue !important;
  color: #ffffff;
}

@media (orientation: portrait) and (max-width: 1100px) {
    .route-window {
        width: 83%;
        
        height: min-content;
        left: 50%;
        transform: translate(-50%, 0%);
        margin-left: 0%;
    }

    .route-window:focus-within:has(#room-search[style*="display:visible"]) {
      height: calc(96% - 40px);
    }

   

    .route-window:focus-within:has(#room-search[style*="display:visible"]) > #room-search > .autocomplete-items {
      height: calc(96vh - 80px);
    }
    
   
}

.path-polyline {
    stroke-width: 3px;
  stroke: #f44336;
  fill: none;
  border-radius: 1px;
  animation-direction: alternate;
}

.path-polyline-animation {
  animation-direction: alternate;
}


textarea, .label .text {
  font-size: 16px;
}

.label-textarea .text {
  transition: all 0.15s ease-out;
  color: grey;
}

textarea {
  width: 100%;
  height: 130px;
  resize: none; 
  border-radius: 4px;
  box-sizing: border-box;
  padding: 16px;
  border: 1px solid #c0c0c0;
}

textarea:focus {
  outline: none;
  border: 2px solid #9575CD;
  
}


textarea:focus + .label-textarea .text, :not(textarea[value=""]) + .label-textarea .text {
  font-size: 12px;
  transform: translate(0, -460%);
  background-color: white;
  padding-left: 4px;
  padding-right: 4px;
}

textarea:focus + .label-textarea .text {
  color: #9575CD;

}

.label-textarea {
  position: absolute;
  top: 0px;
  bottom: 0px;
  left: 17px;
  display: flex;
  align-items: center;
  pointer-events: none;
}


.screen-title > h2 {
  line-height: 0.0;
}

.screen-title {
  display: flex;
  flex-flow: row;
  height: 3ex;
}

.buttons-inline {
  display: flex;
  flex-flow: row;
  justify-content: space-between;
  height: 40px;
}

.back-button {
  margin-top: 7px;
  height: 3ex;
  cursor: pointer;
}


.menu-button {
  margin-top: 10px;
  height: 3ex;
  width: 3ex;
  cursor: pointer;
}


.materialbutton {
  height: 40px;
}
#Rooms > g {
  cursor: pointer;
}

.find-room-input {
  width: calc(100% - 4ex)
}

.inline-div {
  display: flex;
  flex-flow: row;
  justify-content: space-between;
  height: min-content;
}

.menu-inline-div {
  display: flex;
  flex-flow: row;
  justify-content: space-between;
  height: min-content;
  padding-top: 10px;
  color: #9575CD;
  font-size: large;
}

.menu-inline-div > a {
  text-decoration: none;
  color: #9575CD;
}


.menu-inline-animation-in
{
    display: flex;
    animation: fadeInFromNone 0.5s ease-out;
}


@keyframes fadeInFromNone {
    0% {
        display: none;
        opacity: 0;
    }

    1% {
        display: flex;
        opacity: 0;
    }

    100% {
        display: flex;
        opacity: 1;
    }
}

.menu-inline-animation-out
{
    display: flex;
    animation: fadeToNone 0.5s ease-out;
    animation-fill-mode: forwards;
}


@keyframes fadeToNone {
    0% {
        display: flex;
        opacity: 1;
    }

    95% {
        display: flex;
        opacity: 0;
        
    }

    100% {
        display: none;
        opacity: 0;
        height: 0px;
        padding-top: 0px;
    }
}